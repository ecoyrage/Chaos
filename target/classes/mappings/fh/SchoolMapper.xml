<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fh.fh.mapper.SchoolMapper" >
    <resultMap id="BaseResultMap" type="com.fh.fh.model.School" >
        <id column="school_id" property="schoolId" />
        <result column="name" property="name" />
        <result column="tel" property="tel" />
        <result column="logo" property="logo" />
        <result column="address" property="address" />
        <result column="hot" property="hot" />
        <result column="training_type" property="trainingType" />
        <result column="business_circle" property="businessCircle" />
        <result column="introduction" property="introduction" />
        <result column="label" property="label" />
        <result column="state" property="state" />
        <result column="create_time" property="createTime" />
    </resultMap>

    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List" >
        school_id,name,tel,logo,address,hot,training_type,business_circle,introduction,label,state,create_time
    </sql>

    <select id="selectByExample" resultMap="BaseResultMap" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from fh_school
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" >
        select
        <include refid="Base_Column_List" />
        from fh_school
        where school_id = #{schoolId}
    </select>

    <delete id="deleteByPrimaryKey" >
        delete from fh_school
        where school_id = #{schoolId}
    </delete>

    <delete id="deleteByExample" >
        delete from fh_school
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>

    <insert id="insert" >
        insert into fh_school (school_id,name,tel,
        logo,address,hot,
        training_type,business_circle,introduction,
        label,state,create_time
        )
        values (#{schoolId},#{name},#{tel},
        #{logo},#{address},#{hot},
        #{trainingType},#{businessCircle},#{introduction},
        #{label},#{state},#{createTime}
        )
    </insert>

    <insert id="insertSelective" >
        insert into fh_school
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="schoolId != null" >
                school_id,
            </if>
            <if test="name != null" >
                name,
            </if>
            <if test="tel != null" >
                tel,
            </if>
            <if test="logo != null" >
                logo,
            </if>
            <if test="address != null" >
                address,
            </if>
            <if test="hot != null" >
                hot,
            </if>
            <if test="trainingType != null" >
                training_type,
            </if>
            <if test="businessCircle != null" >
                business_circle,
            </if>
            <if test="introduction != null" >
                introduction,
            </if>
            <if test="label != null" >
                label,
            </if>
            <if test="state != null" >
                state,
            </if>
            <if test="createTime != null" >
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="schoolId != null" >
                #{schoolId},
            </if>
            <if test="name != null" >
                #{name},
            </if>
            <if test="tel != null" >
                #{tel},
            </if>
            <if test="logo != null" >
                #{logo},
            </if>
            <if test="address != null" >
                #{address},
            </if>
            <if test="hot != null" >
                #{hot},
            </if>
            <if test="trainingType != null" >
                #{trainingType},
            </if>
            <if test="businessCircle != null" >
                #{businessCircle},
            </if>
            <if test="introduction != null" >
                #{introduction},
            </if>
            <if test="label != null" >
                #{label},
            </if>
            <if test="state != null" >
                #{state},
            </if>
            <if test="createTime != null" >
                #{createTime},
            </if>
        </trim>
    </insert>

    <select id="countByExample" resultType="java.lang.Integer" >
        select count(*) from fh_school
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>

    <update id="updateByExampleSelective" >
        update fh_school
        <set >
            <if test="record.schoolId != null" >
                school_id = #{record.schoolId},
            </if>
            <if test="record.name != null" >
                name = #{record.name},
            </if>
            <if test="record.tel != null" >
                tel = #{record.tel},
            </if>
            <if test="record.logo != null" >
                logo = #{record.logo},
            </if>
            <if test="record.address != null" >
                address = #{record.address},
            </if>
            <if test="record.hot != null" >
                hot = #{record.hot},
            </if>
            <if test="record.trainingType != null" >
                training_type = #{record.trainingType},
            </if>
            <if test="record.businessCircle != null" >
                business_circle = #{record.businessCircle},
            </if>
            <if test="record.introduction != null" >
                introduction = #{record.introduction},
            </if>
            <if test="record.label != null" >
                label = #{record.label},
            </if>
            <if test="record.state != null" >
                state = #{record.state},
            </if>
            <if test="record.createTime != null" >
                create_time = #{record.createTime},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByExample" >
        update fh_school
        set school_id = #{schoolId},
        name = #{name},
        tel = #{tel},
        logo = #{logo},
        address = #{address},
        hot = #{hot},
        training_type = #{trainingType},
        business_circle = #{businessCircle},
        introduction = #{introduction},
        label = #{label},
        state = #{state},
        create_time = #{createTime}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" >
        update fh_school
        <set >
            <if test="name != null" >
                name = #{name},
            </if>
            <if test="tel != null" >
                tel = #{tel},
            </if>
            <if test="logo != null" >
                logo = #{logo},
            </if>
            <if test="address != null" >
                address = #{address},
            </if>
            <if test="hot != null" >
                hot = #{hot},
            </if>
            <if test="trainingType != null" >
                training_type = #{trainingType},
            </if>
            <if test="businessCircle != null" >
                business_circle = #{businessCircle},
            </if>
            <if test="introduction != null" >
                introduction = #{introduction},
            </if>
            <if test="label != null" >
                label = #{label},
            </if>
            <if test="state != null" >
                state = #{state},
            </if>
            <if test="createTime != null" >
                create_time = #{createTime},
            </if>
        </set>
        where school_id = #{schoolId}
    </update>

    <update id="updateByPrimaryKey" >
        update fh_school
        set name = #{name},
        tel = #{tel},
        logo = #{logo},
        address = #{address},
        hot = #{hot},
        training_type = #{trainingType},
        business_circle = #{businessCircle},
        introduction = #{introduction},
        label = #{label},
        state = #{state},
        create_time = #{createTime}
        where school_id = #{schoolId}
    </update>

</mapper>