<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fh.fh.mapper.ApplyMapper" >
    <resultMap id="BaseResultMap" type="com.fh.fh.model.Apply" >
        <id column="apply_id" property="applyId" />
        <result column="course_id" property="courseId" />
        <result column="school_id" property="schoolId" />
        <result column="content" property="content" />
        <result column="name" property="name" />
        <result column="tel" property="tel" />
        <result column="training_type" property="trainingType" />
        <result column="business_circle" property="businessCircle" />
        <result column="create_time" property="createTime" />
    </resultMap>

    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List" >
        apply_id,course_id,school_id,content,name,tel,training_type,business_circle,create_time
    </sql>

    <select id="selectByExample" resultMap="BaseResultMap" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from fh_apply
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" >
        select
        <include refid="Base_Column_List" />
        from fh_apply
        where apply_id = #{applyId}
    </select>

    <delete id="deleteByPrimaryKey" >
        delete from fh_apply
        where apply_id = #{applyId}
    </delete>

    <delete id="deleteByExample" >
        delete from fh_apply
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>

    <insert id="insert" >
        insert into fh_apply (apply_id,course_id,school_id,
        content,name,tel,
        training_type,business_circle,create_time
        )
        values (#{applyId},#{courseId},#{schoolId},
        #{content},#{name},#{tel},
        #{trainingType},#{businessCircle},#{createTime}
        )
    </insert>

    <insert id="insertSelective" >
        insert into fh_apply
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="applyId != null" >
                apply_id,
            </if>
            <if test="courseId != null" >
                course_id,
            </if>
            <if test="schoolId != null" >
                school_id,
            </if>
            <if test="content != null" >
                content,
            </if>
            <if test="name != null" >
                name,
            </if>
            <if test="tel != null" >
                tel,
            </if>
            <if test="trainingType != null" >
                training_type,
            </if>
            <if test="businessCircle != null" >
                business_circle,
            </if>
            <if test="createTime != null" >
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="applyId != null" >
                #{applyId},
            </if>
            <if test="courseId != null" >
                #{courseId},
            </if>
            <if test="schoolId != null" >
                #{schoolId},
            </if>
            <if test="content != null" >
                #{content},
            </if>
            <if test="name != null" >
                #{name},
            </if>
            <if test="tel != null" >
                #{tel},
            </if>
            <if test="trainingType != null" >
                #{trainingType},
            </if>
            <if test="businessCircle != null" >
                #{businessCircle},
            </if>
            <if test="createTime != null" >
                #{createTime},
            </if>
        </trim>
    </insert>

    <select id="countByExample" resultType="java.lang.Integer" >
        select count(*) from fh_apply
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>

    <update id="updateByExampleSelective" >
        update fh_apply
        <set >
            <if test="record.applyId != null" >
                apply_id = #{record.applyId},
            </if>
            <if test="record.courseId != null" >
                course_id = #{record.courseId},
            </if>
            <if test="record.schoolId != null" >
                school_id = #{record.schoolId},
            </if>
            <if test="record.content != null" >
                content = #{record.content},
            </if>
            <if test="record.name != null" >
                name = #{record.name},
            </if>
            <if test="record.tel != null" >
                tel = #{record.tel},
            </if>
            <if test="record.trainingType != null" >
                training_type = #{record.trainingType},
            </if>
            <if test="record.businessCircle != null" >
                business_circle = #{record.businessCircle},
            </if>
            <if test="record.createTime != null" >
                create_time = #{record.createTime},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByExample" >
        update fh_apply
        set apply_id = #{applyId},
        course_id = #{courseId},
        school_id = #{schoolId},
        content = #{content},
        name = #{name},
        tel = #{tel},
        training_type = #{trainingType},
        business_circle = #{businessCircle},
        create_time = #{createTime}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" >
        update fh_apply
        <set >
            <if test="courseId != null" >
                course_id = #{courseId},
            </if>
            <if test="schoolId != null" >
                school_id = #{schoolId},
            </if>
            <if test="content != null" >
                content = #{content},
            </if>
            <if test="name != null" >
                name = #{name},
            </if>
            <if test="tel != null" >
                tel = #{tel},
            </if>
            <if test="trainingType != null" >
                training_type = #{trainingType},
            </if>
            <if test="businessCircle != null" >
                business_circle = #{businessCircle},
            </if>
            <if test="createTime != null" >
                create_time = #{createTime},
            </if>
        </set>
        where apply_id = #{applyId}
    </update>

    <update id="updateByPrimaryKey" >
        update fh_apply
        set course_id = #{courseId},
        school_id = #{schoolId},
        content = #{content},
        name = #{name},
        tel = #{tel},
        training_type = #{trainingType},
        business_circle = #{businessCircle},
        create_time = #{createTime}
        where apply_id = #{applyId}
    </update>

</mapper>